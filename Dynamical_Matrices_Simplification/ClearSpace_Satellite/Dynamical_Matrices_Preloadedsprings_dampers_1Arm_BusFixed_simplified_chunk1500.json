{"COEF_Dyn_simplified": "Matrix([[-3.0*bl**2*mlongarm*sin(q7) - 1.0*bl**2*mlongarm*sin(q10 + q7) + 1.0*bl**2*mlongarm*cos(q10) + 4.0*bl**2*mlongarm - 2.0*bl**2*mshortarm*sin(q7) - 2.0*bl**2*mshortarm*sin(q10 + q7) + 2.0*bl**2*mshortarm*cos(q10) + 3.0*bl**2*mshortarm - 1.0*bl*bs*mshortarm*sin(q10 + q13 + q7) + 1.0*bl*bs*mshortarm*cos(q13) + 1.0*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.25*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, -1.5*bl**2*mlongarm*sin(q7) - 0.5*bl**2*mlongarm*sin(q10 + q7) + 1.0*bl**2*mlongarm*cos(q10) + 1.66666666666667*bl**2*mlongarm - 1.0*bl**2*mshortarm*sin(q7) - 1.0*bl**2*mshortarm*sin(q10 + q7) + 2.0*bl**2*mshortarm*cos(q10) + 2.0*bl**2*mshortarm - 0.5*bl*bs*mshortarm*sin(q10 + q13 + q7) + 1.0*bl*bs*mshortarm*cos(q13) + 1.0*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.166666666666667*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, -0.5*bl**2*mlongarm*sin(q10 + q7) + 0.5*bl**2*mlongarm*cos(q10) + 0.333333333333333*bl**2*mlongarm - 1.0*bl**2*mshortarm*sin(q10 + q7) + 1.0*bl**2*mshortarm*cos(q10) + 1.0*bl**2*mshortarm - 0.5*bl*bs*mshortarm*sin(q10 + q13 + q7) + 1.0*bl*bs*mshortarm*cos(q13) + 0.5*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.0833333333333333*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, mshortarm*(-0.5*bl*bs*sin(q10 + q13 + q7) + 0.5*bl*bs*cos(q13) + 0.5*bl*bs*cos(q10 + q13) + 0.333333333333333*bs**2 + 0.0833333333333333*hs**2)], [-1.5*bl**2*mlongarm*sin(q7) - 0.5*bl**2*mlongarm*sin(q10 + q7) + 1.0*bl**2*mlongarm*cos(q10) + 1.66666666666667*bl**2*mlongarm - 1.0*bl**2*mshortarm*sin(q7) - 1.0*bl**2*mshortarm*sin(q10 + q7) + 2.0*bl**2*mshortarm*cos(q10) + 2.0*bl**2*mshortarm - 0.5*bl*bs*mshortarm*sin(q10 + q13 + q7) + 1.0*bl*bs*mshortarm*cos(q13) + 1.0*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.166666666666667*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, 1.0*bl**2*mlongarm*cos(q10) + 1.66666666666667*bl**2*mlongarm + 2.0*bl**2*mshortarm*cos(q10) + 2.0*bl**2*mshortarm + 1.0*bl*bs*mshortarm*cos(q13) + 1.0*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.166666666666667*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, 0.5*bl**2*mlongarm*cos(q10) + 0.333333333333333*bl**2*mlongarm + 1.0*bl**2*mshortarm*cos(q10) + 1.0*bl**2*mshortarm + 1.0*bl*bs*mshortarm*cos(q13) + 0.5*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.0833333333333333*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, mshortarm*(0.5*bl*bs*cos(q13) + 0.5*bl*bs*cos(q10 + q13) + 0.333333333333333*bs**2 + 0.0833333333333333*hs**2)], [-0.5*bl**2*mlongarm*sin(q10 + q7) + 0.5*bl**2*mlongarm*cos(q10) + 0.333333333333333*bl**2*mlongarm - 1.0*bl**2*mshortarm*sin(q10 + q7) + 1.0*bl**2*mshortarm*cos(q10) + 1.0*bl**2*mshortarm - 0.5*bl*bs*mshortarm*sin(q10 + q13 + q7) + 1.0*bl*bs*mshortarm*cos(q13) + 0.5*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.0833333333333333*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, 0.5*bl**2*mlongarm*cos(q10) + 0.333333333333333*bl**2*mlongarm + 1.0*bl**2*mshortarm*cos(q10) + 1.0*bl**2*mshortarm + 1.0*bl*bs*mshortarm*cos(q13) + 0.5*bl*bs*mshortarm*cos(q10 + q13) + 0.333333333333333*bs**2*mshortarm + 0.0833333333333333*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, 0.333333333333333*bl**2*mlongarm + 1.0*bl**2*mshortarm + 1.0*bl*bs*mshortarm*cos(q13) + 0.333333333333333*bs**2*mshortarm + 0.0833333333333333*hl**2*mlongarm + 0.0833333333333333*hs**2*mshortarm, mshortarm*(0.5*bl*bs*cos(q13) + 0.333333333333333*bs**2 + 0.0833333333333333*hs**2)], [mshortarm*(-0.5*bl*bs*sin(q10 + q13 + q7) + 0.5*bl*bs*cos(q13) + 0.5*bl*bs*cos(q10 + q13) + 0.333333333333333*bs**2 + 0.0833333333333333*hs**2), mshortarm*(0.5*bl*bs*cos(q13) + 0.5*bl*bs*cos(q10 + q13) + 0.333333333333333*bs**2 + 0.0833333333333333*hs**2), mshortarm*(0.5*bl*bs*cos(q13) + 0.333333333333333*bs**2 + 0.0833333333333333*hs**2), mshortarm*(0.333333333333333*bs**2 + 0.0833333333333333*hs**2)]])", "RHS_Dyn_simplified": "Matrix([[-T11 - T21 - T31 - T41 - bl**2*mlongarm*(2*u4**2*sin(q4) + (u4 + u7)**2*cos(q4 + q7))*(sin(q4 + q7) - 2*cos(q4))/4 - bl**2*mlongarm*(2*u4**2*cos(q4) - (u4 + u7)**2*sin(q4 + q7))*(2*sin(q4) + cos(q4 + q7))/4 - bl**2*mlongarm*(2*u4**2*sin(q4) + 2*(u4 + u7)**2*cos(q4 + q7) + (u10 + u4 + u7)**2*cos(q10 + q4 + q7))*(2*sin(q4 + q7) + sin(q10 + q4 + q7) - 2*cos(q4))/4 + bl**2*mlongarm*(-2*u4**2*cos(q4) + 2*(u4 + u7)**2*sin(q4 + q7) + (u10 + u4 + u7)**2*sin(q10 + q4 + q7))*(2*sin(q4) + 2*cos(q4 + q7) + cos(q10 + q4 + q7))/4 - c11*u4 - k11*(q4 + 0.523598775598299) + mshortarm*(2*bl*sin(q4) + 2*bl*cos(q4 + q7) + 2*bl*cos(q10 + q4 + q7) + bs*cos(q10 + q13 + q4 + q7))*(-2*bl*u4**2*cos(q4) + 2*bl*(u4 + u7)**2*sin(q4 + q7) + 2*bl*(u10 + u4 + u7)**2*sin(q10 + q4 + q7) + bs*(u10 + u13 + u4 + u7)**2*sin(q10 + q13 + q4 + q7))/4 - mshortarm*(2*bl*sin(q4 + q7) + 2*bl*sin(q10 + q4 + q7) - 2*bl*cos(q4) + bs*sin(q10 + q13 + q4 + q7))*(2*bl*u4**2*sin(q4) + 2*bl*(u4 + u7)**2*cos(q4 + q7) + 2*bl*(u10 + u4 + u7)**2*cos(q10 + q4 + q7) + bs*(u10 + u13 + u4 + u7)**2*cos(q10 + q13 + q4 + q7))/4], [-1.0*T21 - 1.0*T31 - 1.0*T41 + 0.5*bl**2*mlongarm*u10**2*sin(q10) + 1.0*bl**2*mlongarm*u10*u4*sin(q10) + 1.0*bl**2*mlongarm*u10*u7*sin(q10) - 1.5*bl**2*mlongarm*u4**2*cos(q7) - 0.5*bl**2*mlongarm*u4**2*cos(q10 + q7) + 1.0*bl**2*mshortarm*u10**2*sin(q10) + 2.0*bl**2*mshortarm*u10*u4*sin(q10) + 2.0*bl**2*mshortarm*u10*u7*sin(q10) - 1.0*bl**2*mshortarm*u4**2*cos(q7) - 1.0*bl**2*mshortarm*u4**2*cos(q10 + q7) + 0.5*bl*bs*mshortarm*u10**2*sin(q10 + q13) + 1.0*bl*bs*mshortarm*u10*u13*sin(q13) + 1.0*bl*bs*mshortarm*u10*u13*sin(q10 + q13) + 1.0*bl*bs*mshortarm*u10*u4*sin(q10 + q13) + 1.0*bl*bs*mshortarm*u10*u7*sin(q10 + q13) + 0.5*bl*bs*mshortarm*u13**2*sin(q13) + 0.5*bl*bs*mshortarm*u13**2*sin(q10 + q13) + 1.0*bl*bs*mshortarm*u13*u4*sin(q13) + 1.0*bl*bs*mshortarm*u13*u4*sin(q10 + q13) + 1.0*bl*bs*mshortarm*u13*u7*sin(q13) + 1.0*bl*bs*mshortarm*u13*u7*sin(q10 + q13) - 0.5*bl*bs*mshortarm*u4**2*cos(q10 + q13 + q7) - 1.0*c21*u7 - 1.0*k21*q7 - 2.0943951023932*k21], [-1.0*T31 - 1.0*T41 - 0.5*bl**2*mlongarm*u4**2*sin(q10) - 0.5*bl**2*mlongarm*u4**2*cos(q10 + q7) - 1.0*bl**2*mlongarm*u4*u7*sin(q10) - 0.5*bl**2*mlongarm*u7**2*sin(q10) - 1.0*bl**2*mshortarm*u4**2*sin(q10) - 1.0*bl**2*mshortarm*u4**2*cos(q10 + q7) - 2.0*bl**2*mshortarm*u4*u7*sin(q10) - 1.0*bl**2*mshortarm*u7**2*sin(q10) + 1.0*bl*bs*mshortarm*u10*u13*sin(q13) + 0.5*bl*bs*mshortarm*u13**2*sin(q13) + 1.0*bl*bs*mshortarm*u13*u4*sin(q13) + 1.0*bl*bs*mshortarm*u13*u7*sin(q13) - 0.5*bl*bs*mshortarm*u4**2*sin(q10 + q13) - 0.5*bl*bs*mshortarm*u4**2*cos(q10 + q13 + q7) - 1.0*bl*bs*mshortarm*u4*u7*sin(q10 + q13) - 0.5*bl*bs*mshortarm*u7**2*sin(q10 + q13) - 1.0*c31*u10 - 1.0*k31*q10 - 1.0471975511966*k31], [-1.0*T41 - 0.5*bl*bs*mshortarm*u10**2*sin(q13) - 1.0*bl*bs*mshortarm*u10*u4*sin(q13) - 1.0*bl*bs*mshortarm*u10*u7*sin(q13) - 0.5*bl*bs*mshortarm*u4**2*sin(q13) - 0.5*bl*bs*mshortarm*u4**2*sin(q10 + q13) - 0.5*bl*bs*mshortarm*u4**2*cos(q10 + q13 + q7) - 1.0*bl*bs*mshortarm*u4*u7*sin(q13) - 1.0*bl*bs*mshortarm*u4*u7*sin(q10 + q13) - 0.5*bl*bs*mshortarm*u7**2*sin(q13) - 0.5*bl*bs*mshortarm*u7**2*sin(q10 + q13) - 1.0*c41*u13 - 1.0*k41*q13 - 0.261799387799149*k41]])"}